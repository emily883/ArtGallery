// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Art {
  id          Int          @id @default(autoincrement())
  title       String
  author      String
  description String
  price       Float
  images      art_images[] @relation(name: "ArtToart_images")
  stock       Int
  category    Art_category @relation(name: "ArtToArt_category", fields: [category_id], references: [id])
  category_id Int
  rating      Float        @default(0)
  createdAt   DateTime     @default(now())
}

model Art_category {
  id          Int      @id @default(autoincrement())
  art_id      Art[]    @relation(name: "ArtToArt_category")
  name        String
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model art_images {
  id        Int    @id @default(autoincrement())
  image_url String
  art       Art    @relation(name: "ArtToart_images", fields: [art_id], references: [id])
  art_id    Int
}

model User {
  id        Int            @id @default(autoincrement())
  username  String         @unique
  name      String
  email     String         @unique
  password  String
  address   User_address[] @relation(name: "UserToUser_address")
  admin     Boolean        @default(false)
  orders    Order[]        @relation(name: "OrderToUser")
  createdAt DateTime       @default(now())
  updatedAt DateTime?      @updatedAt
}

model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(name: "OrderToUser", fields: [userId], references: [id])
  userId    Int
  status    OrderStatus
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model User_address {
  id            Int     @id @default(autoincrement())
  user          User    @relation(name: "UserToUser_address", fields: [user_id], references: [id])
  user_id       Int     @unique
  address_line1 String
  address_line2 String?
  city          String
  state         String
  zip           String
  country       String
  phone         String
  is_default    Boolean @default(false)
}

enum OrderStatus {
  Pending
  Approved
  Delivered
}
